server:
  port: 8000
  http2:
    # 提高网络传输效率, 默认为false
    enabled: true
  compression:
    # 是否开启压缩
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  # 启用优雅停机，并遵守spring.lifecycle.timeout-per-shutdown-phase属性中给出的超时
  # GRACEFUL (优雅): 当应用程序以"GRACEFUL"模式关闭时，它不会接受新的请求且会尝试完成所有正在进行的请求和处理，然后才会终止。这种方式适用于那些可能需要一些时间来清理资源或完成正在进行的任务的场景。
  # IMMEDIATE(立即): 当应用程序以"IMMEDIATE"模式关闭时，它会立即终止，而不管当前是否有任何活动任务或请求。这种方式适用于那些可以立即停止而不会造成严重问题的情况。
  shutdown: graceful
mybatis-plus:
  configuration:
    # 开启 Mybatis 二级缓存，默认为 true
    cache-enabled: false
    # 设置本地缓存作用域, Mybatis 一级缓存, 默认为 SESSION
    # 同一个 session 相同查询语句不会再次查询数据库
    # 微服务中, 建议设置为STATEMENT, 即关闭一级缓存
    local-cache-scope: STATEMENT
    # 是否开启自动驼峰命名规则（camel case）映射, 即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射
    map-underscore-to-camel-case: true
    # Sql日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  # 启动时是否检查 MyBatis XML 文件的存在, 默认不检查
  check-config-location: true
  # MyBatis Mapper 所对应的 XML 文件位置
  # Maven 多模块项目的扫描路径需以 classpath*: 开头 （即加载多个 jar 包下的 XML 文件）
  mapper-locations: classpath*:/mapper/**/*.xml
  # MyBatis-Plus 全局策略中的 DB 策略配置
  global-config:
    db-config:
      # 逻辑已删除值(逻辑删除下有效)
      logic-delete-value: 0
      # 逻辑未删除值(逻辑删除下有效)
      logic-not-delete-value: 1
      # 全局默认主键类型, 这里为自增主键
      id-type: auto
      # 表名是否使用驼峰转下划线命名,只对表名生效
      table-underline: true
    # 是否控制台 print mybatis-plus 的 LOGO
    banner: true
# 配置数据源
spring:
  application:
    name: kenaito-taurus
  lifecycle:
    # 采用java.time.Duration格式的值,如果在这个时间内，优雅停机没有停掉应用，超过这个时间就会强制停止应用
    timeout-per-shutdown-phase: 30s
  freemarker:
    # 是否检查模板位置是否存在
    check-template-location: false
    # 模板编码
    charset: utf-8
  cache:
    # 解决缓存异常 https://blog.csdn.net/jikeyeka/article/details/125804049
    type: redis
  data:
    redis:
      repositories:
        # 是否启用Redis存储(关闭防止出现 Multiple Spring Data modules found, entering strict repository configuration mode)
        enabled: false
  datasource:
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    url: jdbc:p6spy:mysql://192.168.235.102:3308/kenaito_taurus?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false
    username: root
    password: 123456
  redis:
    # 数据库索引
    database: ${REDIS_DB:1}
    host: ${REDIS_HOST:192.168.235.102}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PWD:123456}
    # 连接超时时间
    timeout: 5000
# 登录相关配置
login:
  # 是否限制单用户登录
  single-login: true
  # Redis用户登录缓存配置
  user-cache:
    # 存活时间/秒
    idle-time: 21600
  # 验证码
  login-code:
    # 验证码类型配置 查看 LoginProperties 类
    code-type: arithmetic
    # 登录图形验证码有效时间/分钟
    expiration: 2
    # 验证码高度
    width: 111
    # 验证码宽度
    height: 36
    # 内容长度
    length: 2
    # 字体名称，为空则使用默认字体
    font-name:
    # 字体大小
    font-size: 25
# jwt
jwt:
  header: Authorization
  # 令牌前缀
  token-start-with: Bearer
  # 必须使用最少88位的Base64对该令牌进行编码
  base64-secret: ZmQ0ZGI5NjQ0MDQwY2I4MjMxY2Y3ZmI3MjdhN2ZmMjNhODViOTg1ZGE0NTBjMGM4NDA5NzYxMjdjOWMwYWRmZTBlZjlhNGY3ZTg4Y2U3YTE1ODVkZDU5Y2Y3OGYwZWE1NzUzNWQ2YjFjZDc0NGMxZWU2MmQ3MjY1NzJmNTE0MzI=
  # 令牌过期时间 此处单位/毫秒 ，默认4小时，可在此网站生成 https://www.convertworld.com/zh-hans/time/milliseconds.html
  token-validity-in-seconds: 14400000
  # 在线用户key
  online-key: "online-token:"
  # 验证码
  code-key: "captcha-code:"
  # token 续期检查时间范围（默认30分钟，单位毫秒），在token即将过期的一段时间内用户操作了，则给用户的token续期
  detect: 1800000
  # 续期时间范围，默认1小时，单位毫秒
  renew: 3600000
# 是否允许生成代码，生产环境设置为false
generator:
  enabled: false
# 是否开启 swagger-ui
swagger:
  enabled: false
# 文件存储路径
file:
  mac:
    path: ~/file/
    avatar: ~/avatar/
  linux:
    path: /home/${spring.application.name}/file/
    avatar: /home/${spring.application.name}/avatar/
  windows:
    path: C:\${spring.application.name}\file\
    avatar: C:\${spring.application.name}\avatar\
  # 文件大小 /M
  maxSize: 100
  avatarMaxSize: 5
task:
  pool:
    # 核心线程池大小
    core-pool-size: 10
    # 最大线程数
    max-pool-size: 30
    # 活跃时间
    keep-alive-seconds: 60
    # 队列容量
    queue-capacity: 50
# 七牛云
qiniu:
  # 文件大小 /M
  max-size: 15
# 邮箱验证码有效时间/秒
code:
  expiration: 300
# 密码加密传输，前端公钥加密，后端私钥解密
rsa:
  private_key: MIIBUwIBADANBgkqhkiG9w0BAQEFAASCAT0wggE5AgEAAkEA0vfvyTdGJkdbHkB8mp0f3FE0GYP3AYPaJF7jUd1M0XxFSE2ceK3k2kw20YvQ09NJKk+OMjWQl9WitG9pB6tSCQIDAQABAkA2SimBrWC2/wvauBuYqjCFwLvYiRYqZKThUS3MZlebXJiLB+Ue/gUifAAKIg1avttUZsHBHrop4qfJCwAI0+YRAiEA+W3NK/RaXtnRqmoUUkb59zsZUBLpvZgQPfj1MhyHDz0CIQDYhsAhPJ3mgS64NbUZmGWuuNKp5coY2GIj/zYDMJp6vQIgUueLFXv/eZ1ekgz2Oi67MNCk5jeTF2BurZqNLR3MSmUCIFT3Q6uHMtsB9Eha4u7hS31tj1UWE+D+ADzp59MGnoftAiBeHT7gDMuqeJHPL4b+kC+gzV4FGTfhR9q3tTbklZkD2A==
# gitlab
gitlab:
  enable: false
  url: http://192.168.235.100:20080
  # 所需权限：api、read_api、read_user、create_runner、manage_runner、read_repository、write_repository
  # v14.8.2 http://192.168.235.100:20080/-/profile/personal_access_tokens
  # v17.x http://192.168.235.100:20080/-/user_settings/personal_access_tokens
  # 默认分支改master
  # v17.x http://192.168.235.100:20080/admin/application_settings/repository#js-default-branch-name
  # 系统事件回调
  # v17.x http://192.168.235.100:20080/admin/hooks
  # 回调Url http://192.168.1.105:8000/openApi/gitlab/webhook/callback
  # 所需事件 Repository update events、Push events、Merge request events
  access-token:
# k8s
k8s:
  enable: false
  debug: false
# dingtalk
dingtalk:
  enable: false
  agent-id: 3286687600
  app-key: dingcsmyubzwqib8hk6v
  app-secret: pT19iIMhYHQuSC9EcJ10hb42ab0F21pMlZ3rfHMOvdOtFmN3j8NB_k4Cno2HRiC4
  robot-code: dingcsmyubzwqib8hk6v
# minio
minio:
  enable: false
  # 控制台登录端口 http://localhost:9001
  # 文件上传&预览端口 http://localhost:9000
  endpoint: http://localhost:9000
  access-key: minioadmin
  secret-key: minioadmin
  # 分享链接过期时间，单位天
  share-expire-time: 7