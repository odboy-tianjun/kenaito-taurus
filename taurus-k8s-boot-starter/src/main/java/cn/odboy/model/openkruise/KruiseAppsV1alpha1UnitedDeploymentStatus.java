/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.21.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package cn.odboy.model.openkruise;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.annotation.Generated;
import java.util.*;

/**
 * UnitedDeploymentStatus defines the observed state of UnitedDeployment.
 */
@ApiModel(description = "UnitedDeploymentStatus defines the observed state of UnitedDeployment.")
@Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-21T15:55:09.049+08:00")
public class KruiseAppsV1alpha1UnitedDeploymentStatus {
    @SerializedName("collisionCount")
    private Integer collisionCount = null;
    @SerializedName("conditions")
    private List<KruiseAppsV1alpha1UnitedDeploymentCondition> conditions = null;
    @SerializedName("currentRevision")
    private String currentRevision = null;
    @SerializedName("labelSelector")
    private String labelSelector = null;
    @SerializedName("observedGeneration")
    private Long observedGeneration = null;
    @SerializedName("readyReplicas")
    private Integer readyReplicas = null;
    @SerializedName("replicas")
    private Integer replicas = null;
    @SerializedName("subsetReplicas")
    private Map<String, Integer> subsetReplicas = null;
    @SerializedName("updateStatus")
    private KruiseAppsV1alpha1UpdateStatus updateStatus = null;
    @SerializedName("updatedReadyReplicas")
    private Integer updatedReadyReplicas = null;
    @SerializedName("updatedReplicas")
    private Integer updatedReplicas = null;

    public KruiseAppsV1alpha1UnitedDeploymentStatus collisionCount(Integer collisionCount) {
        this.collisionCount = collisionCount;
        return this;
    }

    /**
     * Count of hash collisions for the UnitedDeployment. The UnitedDeployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.
     *
     * @return collisionCount
     **/
    @ApiModelProperty(value = "Count of hash collisions for the UnitedDeployment. The UnitedDeployment controller uses this field as a collision avoidance mechanism when it needs to create the name for the newest ControllerRevision.")
    public Integer getCollisionCount() {
        return collisionCount;
    }

    public void setCollisionCount(Integer collisionCount) {
        this.collisionCount = collisionCount;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus conditions(List<KruiseAppsV1alpha1UnitedDeploymentCondition> conditions) {
        this.conditions = conditions;
        return this;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus addConditionsItem(KruiseAppsV1alpha1UnitedDeploymentCondition conditionsItem) {
        if (this.conditions == null) {
            this.conditions = new ArrayList<KruiseAppsV1alpha1UnitedDeploymentCondition>();
        }
        this.conditions.add(conditionsItem);
        return this;
    }

    /**
     * Represents the latest available observations of a UnitedDeployment&#39;s current state.
     *
     * @return conditions
     **/
    @ApiModelProperty(value = "Represents the latest available observations of a UnitedDeployment's current state.")
    public List<KruiseAppsV1alpha1UnitedDeploymentCondition> getConditions() {
        return conditions;
    }

    public void setConditions(List<KruiseAppsV1alpha1UnitedDeploymentCondition> conditions) {
        this.conditions = conditions;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus currentRevision(String currentRevision) {
        this.currentRevision = currentRevision;
        return this;
    }

    /**
     * CurrentRevision, if not empty, indicates the current version of the UnitedDeployment.
     *
     * @return currentRevision
     **/
    @ApiModelProperty(required = true, value = "CurrentRevision, if not empty, indicates the current version of the UnitedDeployment.")
    public String getCurrentRevision() {
        return currentRevision;
    }

    public void setCurrentRevision(String currentRevision) {
        this.currentRevision = currentRevision;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus labelSelector(String labelSelector) {
        this.labelSelector = labelSelector;
        return this;
    }

    /**
     * LabelSelector is label selectors for query over pods that should match the replica count used by HPA.
     *
     * @return labelSelector
     **/
    @ApiModelProperty(value = "LabelSelector is label selectors for query over pods that should match the replica count used by HPA.")
    public String getLabelSelector() {
        return labelSelector;
    }

    public void setLabelSelector(String labelSelector) {
        this.labelSelector = labelSelector;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus observedGeneration(Long observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }

    /**
     * ObservedGeneration is the most recent generation observed for this UnitedDeployment. It corresponds to the UnitedDeployment&#39;s generation, which is updated on mutation by the API Server.
     *
     * @return observedGeneration
     **/
    @ApiModelProperty(value = "ObservedGeneration is the most recent generation observed for this UnitedDeployment. It corresponds to the UnitedDeployment's generation, which is updated on mutation by the API Server.")
    public Long getObservedGeneration() {
        return observedGeneration;
    }

    public void setObservedGeneration(Long observedGeneration) {
        this.observedGeneration = observedGeneration;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus readyReplicas(Integer readyReplicas) {
        this.readyReplicas = readyReplicas;
        return this;
    }

    /**
     * The number of ready replicas.
     *
     * @return readyReplicas
     **/
    @ApiModelProperty(value = "The number of ready replicas.")
    public Integer getReadyReplicas() {
        return readyReplicas;
    }

    public void setReadyReplicas(Integer readyReplicas) {
        this.readyReplicas = readyReplicas;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus replicas(Integer replicas) {
        this.replicas = replicas;
        return this;
    }

    /**
     * Replicas is the most recently observed number of replicas.
     *
     * @return replicas
     **/
    @ApiModelProperty(required = true, value = "Replicas is the most recently observed number of replicas.")
    public Integer getReplicas() {
        return replicas;
    }

    public void setReplicas(Integer replicas) {
        this.replicas = replicas;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus subsetReplicas(Map<String, Integer> subsetReplicas) {
        this.subsetReplicas = subsetReplicas;
        return this;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus putSubsetReplicasItem(String key, Integer subsetReplicasItem) {
        if (this.subsetReplicas == null) {
            this.subsetReplicas = new HashMap<String, Integer>();
        }
        this.subsetReplicas.put(key, subsetReplicasItem);
        return this;
    }

    /**
     * Records the topology detail information of the replicas of each subset.
     *
     * @return subsetReplicas
     **/
    @ApiModelProperty(value = "Records the topology detail information of the replicas of each subset.")
    public Map<String, Integer> getSubsetReplicas() {
        return subsetReplicas;
    }

    public void setSubsetReplicas(Map<String, Integer> subsetReplicas) {
        this.subsetReplicas = subsetReplicas;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus updateStatus(KruiseAppsV1alpha1UpdateStatus updateStatus) {
        this.updateStatus = updateStatus;
        return this;
    }

    /**
     * Get updateStatus
     *
     * @return updateStatus
     **/
    @ApiModelProperty(value = "")
    public KruiseAppsV1alpha1UpdateStatus getUpdateStatus() {
        return updateStatus;
    }

    public void setUpdateStatus(KruiseAppsV1alpha1UpdateStatus updateStatus) {
        this.updateStatus = updateStatus;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus updatedReadyReplicas(Integer updatedReadyReplicas) {
        this.updatedReadyReplicas = updatedReadyReplicas;
        return this;
    }

    /**
     * The number of ready current revision replicas for this UnitedDeployment.
     *
     * @return updatedReadyReplicas
     **/
    @ApiModelProperty(value = "The number of ready current revision replicas for this UnitedDeployment.")
    public Integer getUpdatedReadyReplicas() {
        return updatedReadyReplicas;
    }

    public void setUpdatedReadyReplicas(Integer updatedReadyReplicas) {
        this.updatedReadyReplicas = updatedReadyReplicas;
    }

    public KruiseAppsV1alpha1UnitedDeploymentStatus updatedReplicas(Integer updatedReplicas) {
        this.updatedReplicas = updatedReplicas;
        return this;
    }

    /**
     * The number of pods in current version.
     *
     * @return updatedReplicas
     **/
    @ApiModelProperty(required = true, value = "The number of pods in current version.")
    public Integer getUpdatedReplicas() {
        return updatedReplicas;
    }

    public void setUpdatedReplicas(Integer updatedReplicas) {
        this.updatedReplicas = updatedReplicas;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof KruiseAppsV1alpha1UnitedDeploymentStatus)) {
            return false;
        }
        KruiseAppsV1alpha1UnitedDeploymentStatus ioKruiseAppsV1alpha1UnitedDeploymentStatus = (KruiseAppsV1alpha1UnitedDeploymentStatus) o;
        return Objects.equals(this.collisionCount, ioKruiseAppsV1alpha1UnitedDeploymentStatus.collisionCount) &&
                Objects.equals(this.conditions, ioKruiseAppsV1alpha1UnitedDeploymentStatus.conditions) &&
                Objects.equals(this.currentRevision, ioKruiseAppsV1alpha1UnitedDeploymentStatus.currentRevision) &&
                Objects.equals(this.labelSelector, ioKruiseAppsV1alpha1UnitedDeploymentStatus.labelSelector) &&
                Objects.equals(this.observedGeneration, ioKruiseAppsV1alpha1UnitedDeploymentStatus.observedGeneration) &&
                Objects.equals(this.readyReplicas, ioKruiseAppsV1alpha1UnitedDeploymentStatus.readyReplicas) &&
                Objects.equals(this.replicas, ioKruiseAppsV1alpha1UnitedDeploymentStatus.replicas) &&
                Objects.equals(this.subsetReplicas, ioKruiseAppsV1alpha1UnitedDeploymentStatus.subsetReplicas) &&
                Objects.equals(this.updateStatus, ioKruiseAppsV1alpha1UnitedDeploymentStatus.updateStatus) &&
                Objects.equals(this.updatedReadyReplicas, ioKruiseAppsV1alpha1UnitedDeploymentStatus.updatedReadyReplicas) &&
                Objects.equals(this.updatedReplicas, ioKruiseAppsV1alpha1UnitedDeploymentStatus.updatedReplicas);
    }

    @Override
    public int hashCode() {
        return Objects.hash(collisionCount, conditions, currentRevision, labelSelector, observedGeneration, readyReplicas, replicas, subsetReplicas, updateStatus, updatedReadyReplicas, updatedReplicas);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KruiseAppsV1alpha1UnitedDeploymentStatus {\n");
        sb.append("    collisionCount: ").append(toIndentedString(collisionCount)).append("\n");
        sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
        sb.append("    currentRevision: ").append(toIndentedString(currentRevision)).append("\n");
        sb.append("    labelSelector: ").append(toIndentedString(labelSelector)).append("\n");
        sb.append("    observedGeneration: ").append(toIndentedString(observedGeneration)).append("\n");
        sb.append("    readyReplicas: ").append(toIndentedString(readyReplicas)).append("\n");
        sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
        sb.append("    subsetReplicas: ").append(toIndentedString(subsetReplicas)).append("\n");
        sb.append("    updateStatus: ").append(toIndentedString(updateStatus)).append("\n");
        sb.append("    updatedReadyReplicas: ").append(toIndentedString(updatedReadyReplicas)).append("\n");
        sb.append("    updatedReplicas: ").append(toIndentedString(updatedReplicas)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
