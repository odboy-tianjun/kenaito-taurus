/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.21.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package cn.odboy.model.openkruise;

import com.google.gson.annotations.SerializedName;
import io.kubernetes.client.openapi.models.V1ObjectReference;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

/**
 * ImageTagSpec defines the pulling spec of an image tag
 */
@ApiModel(description = "ImageTagSpec defines the pulling spec of an image tag")
@Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-21T15:55:09.049+08:00")
public class KruiseAppsV1alpha1ImageTagSpec {
    @SerializedName("createdAt")
    private Date createdAt = null;
    @SerializedName("ownerReferences")
    private List<V1ObjectReference> ownerReferences = null;
    @SerializedName("pullPolicy")
    private KruiseAppsV1alpha1ImageTagPullPolicy pullPolicy = null;
    @SerializedName("tag")
    private String tag = null;
    @SerializedName("version")
    private Long version = null;

    public KruiseAppsV1alpha1ImageTagSpec createdAt(Date createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Specifies the create time of this tag
     *
     * @return createdAt
     **/
    @ApiModelProperty(value = "Specifies the create time of this tag")
    public Date getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public KruiseAppsV1alpha1ImageTagSpec ownerReferences(List<V1ObjectReference> ownerReferences) {
        this.ownerReferences = ownerReferences;
        return this;
    }

    public KruiseAppsV1alpha1ImageTagSpec addOwnerReferencesItem(V1ObjectReference ownerReferencesItem) {
        if (this.ownerReferences == null) {
            this.ownerReferences = new ArrayList<V1ObjectReference>();
        }
        this.ownerReferences.add(ownerReferencesItem);
        return this;
    }

    /**
     * List of objects depended by this object. If this image is managed by a controller, then an entry in this list will point to this controller.
     *
     * @return ownerReferences
     **/
    @ApiModelProperty(value = "List of objects depended by this object. If this image is managed by a controller, then an entry in this list will point to this controller.")
    public List<V1ObjectReference> getOwnerReferences() {
        return ownerReferences;
    }

    public void setOwnerReferences(List<V1ObjectReference> ownerReferences) {
        this.ownerReferences = ownerReferences;
    }

    public KruiseAppsV1alpha1ImageTagSpec pullPolicy(KruiseAppsV1alpha1ImageTagPullPolicy pullPolicy) {
        this.pullPolicy = pullPolicy;
        return this;
    }

    /**
     * Get pullPolicy
     *
     * @return pullPolicy
     **/
    @ApiModelProperty(value = "")
    public KruiseAppsV1alpha1ImageTagPullPolicy getPullPolicy() {
        return pullPolicy;
    }

    public void setPullPolicy(KruiseAppsV1alpha1ImageTagPullPolicy pullPolicy) {
        this.pullPolicy = pullPolicy;
    }

    public KruiseAppsV1alpha1ImageTagSpec tag(String tag) {
        this.tag = tag;
        return this;
    }

    /**
     * Specifies the image tag
     *
     * @return tag
     **/
    @ApiModelProperty(required = true, value = "Specifies the image tag")
    public String getTag() {
        return tag;
    }

    public void setTag(String tag) {
        this.tag = tag;
    }

    public KruiseAppsV1alpha1ImageTagSpec version(Long version) {
        this.version = version;
        return this;
    }

    /**
     * An opaque value that represents the internal version of this tag that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server.   Populated by the system. Read-only. Value must be treated as opaque by clients and .
     *
     * @return version
     **/
    @ApiModelProperty(value = "An opaque value that represents the internal version of this tag that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server.   Populated by the system. Read-only. Value must be treated as opaque by clients and .")
    public Long getVersion() {
        return version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof KruiseAppsV1alpha1ImageTagSpec)) {
            return false;
        }
        KruiseAppsV1alpha1ImageTagSpec ioKruiseAppsV1alpha1NodeImageSpecTags = (KruiseAppsV1alpha1ImageTagSpec) o;
        return Objects.equals(this.createdAt, ioKruiseAppsV1alpha1NodeImageSpecTags.createdAt) &&
                Objects.equals(this.ownerReferences, ioKruiseAppsV1alpha1NodeImageSpecTags.ownerReferences) &&
                Objects.equals(this.pullPolicy, ioKruiseAppsV1alpha1NodeImageSpecTags.pullPolicy) &&
                Objects.equals(this.tag, ioKruiseAppsV1alpha1NodeImageSpecTags.tag) &&
                Objects.equals(this.version, ioKruiseAppsV1alpha1NodeImageSpecTags.version);
    }

    @Override
    public int hashCode() {
        return Objects.hash(createdAt, ownerReferences, pullPolicy, tag, version);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KruiseAppsV1alpha1NodeImageSpecTags {\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    ownerReferences: ").append(toIndentedString(ownerReferences)).append("\n");
        sb.append("    pullPolicy: ").append(toIndentedString(pullPolicy)).append("\n");
        sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
