/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.21.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package cn.odboy.model.openkruise;

import com.google.gson.annotations.SerializedName;
import io.kubernetes.client.openapi.models.V1LabelSelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * PodProbeMarkerSpec defines the desired state of PodProbeMarker
 */
@ApiModel(description = "PodProbeMarkerSpec defines the desired state of PodProbeMarker")
@Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-21T15:55:09.049+08:00")
public class KruiseAppsV1alpha1PodProbeMarkerSpec {
    @SerializedName("probes")
    private List<KruiseAppsV1alpha1PodContainerProbe> probes = new ArrayList<KruiseAppsV1alpha1PodContainerProbe>();
    @SerializedName("selector")
    private V1LabelSelector selector = null;

    public KruiseAppsV1alpha1PodProbeMarkerSpec probes(List<KruiseAppsV1alpha1PodContainerProbe> probes) {
        this.probes = probes;
        return this;
    }

    public KruiseAppsV1alpha1PodProbeMarkerSpec addProbesItem(KruiseAppsV1alpha1PodContainerProbe probesItem) {
        this.probes.add(probesItem);
        return this;
    }

    /**
     * Custom container probe, current only support Exec(). Probe Result will record in Pod.Status.Conditions, and condition.type&#x3D;probe.name. condition.status&#x3D;True indicates probe success condition.status&#x3D;False indicates probe fails
     *
     * @return probes
     **/
    @ApiModelProperty(required = true, value = "Custom container probe, current only support Exec(). Probe Result will record in Pod.Status.Conditions, and condition.type=probe.name. condition.status=True indicates probe success condition.status=False indicates probe fails")
    public List<KruiseAppsV1alpha1PodContainerProbe> getProbes() {
        return probes;
    }

    public void setProbes(List<KruiseAppsV1alpha1PodContainerProbe> probes) {
        this.probes = probes;
    }

    public KruiseAppsV1alpha1PodProbeMarkerSpec selector(V1LabelSelector selector) {
        this.selector = selector;
        return this;
    }

    /**
     * Get selector
     *
     * @return selector
     **/
    @ApiModelProperty(required = true, value = "")
    public V1LabelSelector getSelector() {
        return selector;
    }

    public void setSelector(V1LabelSelector selector) {
        this.selector = selector;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof KruiseAppsV1alpha1PodProbeMarkerSpec)) {
            return false;
        }
        KruiseAppsV1alpha1PodProbeMarkerSpec ioKruiseAppsV1alpha1PodProbeMarkerSpec = (KruiseAppsV1alpha1PodProbeMarkerSpec) o;
        return Objects.equals(this.probes, ioKruiseAppsV1alpha1PodProbeMarkerSpec.probes) &&
                Objects.equals(this.selector, ioKruiseAppsV1alpha1PodProbeMarkerSpec.selector);
    }

    @Override
    public int hashCode() {
        return Objects.hash(probes, selector);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KruiseAppsV1alpha1PodProbeMarkerSpec {\n");
        sb.append("    probes: ").append(toIndentedString(probes)).append("\n");
        sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
