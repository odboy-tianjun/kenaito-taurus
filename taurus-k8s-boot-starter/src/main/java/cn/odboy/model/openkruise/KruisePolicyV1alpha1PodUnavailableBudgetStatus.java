/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.21.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package cn.odboy.model.openkruise;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.annotation.Generated;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

/**
 * PodUnavailableBudgetStatus defines the observed state of PodUnavailableBudget
 */
@ApiModel(description = "PodUnavailableBudgetStatus defines the observed state of PodUnavailableBudget")
@Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-21T15:55:09.049+08:00")
public class KruisePolicyV1alpha1PodUnavailableBudgetStatus {
    @SerializedName("currentAvailable")
    private Integer currentAvailable = null;
    @SerializedName("desiredAvailable")
    private Integer desiredAvailable = null;
    @SerializedName("disruptedPods")
    private Map<String, Date> disruptedPods = null;
    @SerializedName("observedGeneration")
    private Long observedGeneration = null;
    @SerializedName("totalReplicas")
    private Integer totalReplicas = null;
    @SerializedName("unavailableAllowed")
    private Integer unavailableAllowed = null;
    @SerializedName("unavailablePods")
    private Map<String, Date> unavailablePods = null;

    public KruisePolicyV1alpha1PodUnavailableBudgetStatus currentAvailable(Integer currentAvailable) {
        this.currentAvailable = currentAvailable;
        return this;
    }

    /**
     * CurrentAvailable current number of available pods
     *
     * @return currentAvailable
     **/
    @ApiModelProperty(required = true, value = "CurrentAvailable current number of available pods")
    public Integer getCurrentAvailable() {
        return currentAvailable;
    }

    public void setCurrentAvailable(Integer currentAvailable) {
        this.currentAvailable = currentAvailable;
    }

    public KruisePolicyV1alpha1PodUnavailableBudgetStatus desiredAvailable(Integer desiredAvailable) {
        this.desiredAvailable = desiredAvailable;
        return this;
    }

    /**
     * DesiredAvailable minimum desired number of available pods
     *
     * @return desiredAvailable
     **/
    @ApiModelProperty(required = true, value = "DesiredAvailable minimum desired number of available pods")
    public Integer getDesiredAvailable() {
        return desiredAvailable;
    }

    public void setDesiredAvailable(Integer desiredAvailable) {
        this.desiredAvailable = desiredAvailable;
    }

    public KruisePolicyV1alpha1PodUnavailableBudgetStatus disruptedPods(Map<String, Date> disruptedPods) {
        this.disruptedPods = disruptedPods;
        return this;
    }

    public KruisePolicyV1alpha1PodUnavailableBudgetStatus putDisruptedPodsItem(String key, Date disruptedPodsItem) {
        if (this.disruptedPods == null) {
            this.disruptedPods = new HashMap<String, Date>();
        }
        this.disruptedPods.put(key, disruptedPodsItem);
        return this;
    }

    /**
     * DisruptedPods contains information about pods whose eviction or deletion was processed by the API handler but has not yet been observed by the PodUnavailableBudget.
     *
     * @return disruptedPods
     **/
    @ApiModelProperty(value = "DisruptedPods contains information about pods whose eviction or deletion was processed by the API handler but has not yet been observed by the PodUnavailableBudget.")
    public Map<String, Date> getDisruptedPods() {
        return disruptedPods;
    }

    public void setDisruptedPods(Map<String, Date> disruptedPods) {
        this.disruptedPods = disruptedPods;
    }

    public KruisePolicyV1alpha1PodUnavailableBudgetStatus observedGeneration(Long observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }

    /**
     * Most recent generation observed when updating this PUB status. UnavailableAllowed and other status information is valid only if observedGeneration equals to PUB&#39;s object generation.
     *
     * @return observedGeneration
     **/
    @ApiModelProperty(value = "Most recent generation observed when updating this PUB status. UnavailableAllowed and other status information is valid only if observedGeneration equals to PUB's object generation.")
    public Long getObservedGeneration() {
        return observedGeneration;
    }

    public void setObservedGeneration(Long observedGeneration) {
        this.observedGeneration = observedGeneration;
    }

    public KruisePolicyV1alpha1PodUnavailableBudgetStatus totalReplicas(Integer totalReplicas) {
        this.totalReplicas = totalReplicas;
        return this;
    }

    /**
     * TotalReplicas total number of pods counted by this unavailable budget
     *
     * @return totalReplicas
     **/
    @ApiModelProperty(required = true, value = "TotalReplicas total number of pods counted by this unavailable budget")
    public Integer getTotalReplicas() {
        return totalReplicas;
    }

    public void setTotalReplicas(Integer totalReplicas) {
        this.totalReplicas = totalReplicas;
    }

    public KruisePolicyV1alpha1PodUnavailableBudgetStatus unavailableAllowed(Integer unavailableAllowed) {
        this.unavailableAllowed = unavailableAllowed;
        return this;
    }

    /**
     * UnavailableAllowed number of pod unavailable that are currently allowed
     *
     * @return unavailableAllowed
     **/
    @ApiModelProperty(required = true, value = "UnavailableAllowed number of pod unavailable that are currently allowed")
    public Integer getUnavailableAllowed() {
        return unavailableAllowed;
    }

    public void setUnavailableAllowed(Integer unavailableAllowed) {
        this.unavailableAllowed = unavailableAllowed;
    }

    public KruisePolicyV1alpha1PodUnavailableBudgetStatus unavailablePods(Map<String, Date> unavailablePods) {
        this.unavailablePods = unavailablePods;
        return this;
    }

    public KruisePolicyV1alpha1PodUnavailableBudgetStatus putUnavailablePodsItem(String key, Date unavailablePodsItem) {
        if (this.unavailablePods == null) {
            this.unavailablePods = new HashMap<String, Date>();
        }
        this.unavailablePods.put(key, unavailablePodsItem);
        return this;
    }

    /**
     * UnavailablePods contains information about pods whose specification changed(inplace-update pod), once pod is available(consistent and ready) again, it will be removed from the list.
     *
     * @return unavailablePods
     **/
    @ApiModelProperty(value = "UnavailablePods contains information about pods whose specification changed(inplace-update pod), once pod is available(consistent and ready) again, it will be removed from the list.")
    public Map<String, Date> getUnavailablePods() {
        return unavailablePods;
    }

    public void setUnavailablePods(Map<String, Date> unavailablePods) {
        this.unavailablePods = unavailablePods;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof KruisePolicyV1alpha1PodUnavailableBudgetStatus)) {
            return false;
        }
        KruisePolicyV1alpha1PodUnavailableBudgetStatus ioKruisePolicyV1alpha1PodUnavailableBudgetStatus = (KruisePolicyV1alpha1PodUnavailableBudgetStatus) o;
        return Objects.equals(this.currentAvailable, ioKruisePolicyV1alpha1PodUnavailableBudgetStatus.currentAvailable) &&
                Objects.equals(this.desiredAvailable, ioKruisePolicyV1alpha1PodUnavailableBudgetStatus.desiredAvailable) &&
                Objects.equals(this.disruptedPods, ioKruisePolicyV1alpha1PodUnavailableBudgetStatus.disruptedPods) &&
                Objects.equals(this.observedGeneration, ioKruisePolicyV1alpha1PodUnavailableBudgetStatus.observedGeneration) &&
                Objects.equals(this.totalReplicas, ioKruisePolicyV1alpha1PodUnavailableBudgetStatus.totalReplicas) &&
                Objects.equals(this.unavailableAllowed, ioKruisePolicyV1alpha1PodUnavailableBudgetStatus.unavailableAllowed) &&
                Objects.equals(this.unavailablePods, ioKruisePolicyV1alpha1PodUnavailableBudgetStatus.unavailablePods);
    }

    @Override
    public int hashCode() {
        return Objects.hash(currentAvailable, desiredAvailable, disruptedPods, observedGeneration, totalReplicas, unavailableAllowed, unavailablePods);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KruisePolicyV1alpha1PodUnavailableBudgetStatus {\n");
        sb.append("    currentAvailable: ").append(toIndentedString(currentAvailable)).append("\n");
        sb.append("    desiredAvailable: ").append(toIndentedString(desiredAvailable)).append("\n");
        sb.append("    disruptedPods: ").append(toIndentedString(disruptedPods)).append("\n");
        sb.append("    observedGeneration: ").append(toIndentedString(observedGeneration)).append("\n");
        sb.append("    totalReplicas: ").append(toIndentedString(totalReplicas)).append("\n");
        sb.append("    unavailableAllowed: ").append(toIndentedString(unavailableAllowed)).append("\n");
        sb.append("    unavailablePods: ").append(toIndentedString(unavailablePods)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
