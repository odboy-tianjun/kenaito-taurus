/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.21.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package cn.odboy.model.openkruise;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * PersistentPodStateSpec defines the desired state of PersistentPodState
 */
@ApiModel(description = "PersistentPodStateSpec defines the desired state of PersistentPodState")
@Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-21T15:55:09.049+08:00")
public class KruiseAppsV1alpha1PersistentPodStateSpec {
    @SerializedName("persistentPodAnnotations")
    private List<KruiseAppsV1alpha1PersistentPodAnnotation> persistentPodAnnotations = null;
    @SerializedName("persistentPodStateRetentionPolicy")
    private String persistentPodStateRetentionPolicy = null;
    @SerializedName("preferredPersistentTopology")
    private List<KruiseAppsV1alpha1PreferredTopologyTerm> preferredPersistentTopology = null;
    @SerializedName("requiredPersistentTopology")
    private KruiseAppsV1alpha1NodeTopologyTerm requiredPersistentTopology = null;
    @SerializedName("targetRef")
    private KruiseAppsV1alpha1TargetReference targetRef = null;

    public KruiseAppsV1alpha1PersistentPodStateSpec persistentPodAnnotations(List<KruiseAppsV1alpha1PersistentPodAnnotation> persistentPodAnnotations) {
        this.persistentPodAnnotations = persistentPodAnnotations;
        return this;
    }

    public KruiseAppsV1alpha1PersistentPodStateSpec addPersistentPodAnnotationsItem(KruiseAppsV1alpha1PersistentPodAnnotation persistentPodAnnotationsItem) {
        if (this.persistentPodAnnotations == null) {
            this.persistentPodAnnotations = new ArrayList<KruiseAppsV1alpha1PersistentPodAnnotation>();
        }
        this.persistentPodAnnotations.add(persistentPodAnnotationsItem);
        return this;
    }

    /**
     * Persist the annotations information of the pods that need to be saved
     *
     * @return persistentPodAnnotations
     **/
    @ApiModelProperty(value = "Persist the annotations information of the pods that need to be saved")
    public List<KruiseAppsV1alpha1PersistentPodAnnotation> getPersistentPodAnnotations() {
        return persistentPodAnnotations;
    }

    public void setPersistentPodAnnotations(List<KruiseAppsV1alpha1PersistentPodAnnotation> persistentPodAnnotations) {
        this.persistentPodAnnotations = persistentPodAnnotations;
    }

    public KruiseAppsV1alpha1PersistentPodStateSpec persistentPodStateRetentionPolicy(String persistentPodStateRetentionPolicy) {
        this.persistentPodStateRetentionPolicy = persistentPodStateRetentionPolicy;
        return this;
    }

    /**
     * PersistentPodStateRetentionPolicy describes the policy used for PodState. The default policy of &#39;WhenScaled&#39; causes when scale down statefulSet, deleting it.
     *
     * @return persistentPodStateRetentionPolicy
     **/
    @ApiModelProperty(value = "PersistentPodStateRetentionPolicy describes the policy used for PodState. The default policy of 'WhenScaled' causes when scale down statefulSet, deleting it.")
    public String getPersistentPodStateRetentionPolicy() {
        return persistentPodStateRetentionPolicy;
    }

    public void setPersistentPodStateRetentionPolicy(String persistentPodStateRetentionPolicy) {
        this.persistentPodStateRetentionPolicy = persistentPodStateRetentionPolicy;
    }

    public KruiseAppsV1alpha1PersistentPodStateSpec preferredPersistentTopology(List<KruiseAppsV1alpha1PreferredTopologyTerm> preferredPersistentTopology) {
        this.preferredPersistentTopology = preferredPersistentTopology;
        return this;
    }

    public KruiseAppsV1alpha1PersistentPodStateSpec addPreferredPersistentTopologyItem(KruiseAppsV1alpha1PreferredTopologyTerm preferredPersistentTopologyItem) {
        if (this.preferredPersistentTopology == null) {
            this.preferredPersistentTopology = new ArrayList<KruiseAppsV1alpha1PreferredTopologyTerm>();
        }
        this.preferredPersistentTopology.add(preferredPersistentTopologyItem);
        return this;
    }

    /**
     * Pod rebuilt topology preferred for node labels, with xx weight for example  kubernetes.io/hostname, failure-domain.beta.kubernetes.io/zone
     *
     * @return preferredPersistentTopology
     **/
    @ApiModelProperty(value = "Pod rebuilt topology preferred for node labels, with xx weight for example  kubernetes.io/hostname, failure-domain.beta.kubernetes.io/zone")
    public List<KruiseAppsV1alpha1PreferredTopologyTerm> getPreferredPersistentTopology() {
        return preferredPersistentTopology;
    }

    public void setPreferredPersistentTopology(List<KruiseAppsV1alpha1PreferredTopologyTerm> preferredPersistentTopology) {
        this.preferredPersistentTopology = preferredPersistentTopology;
    }

    public KruiseAppsV1alpha1PersistentPodStateSpec requiredPersistentTopology(KruiseAppsV1alpha1NodeTopologyTerm requiredPersistentTopology) {
        this.requiredPersistentTopology = requiredPersistentTopology;
        return this;
    }

    /**
     * Get requiredPersistentTopology
     *
     * @return requiredPersistentTopology
     **/
    @ApiModelProperty(value = "")
    public KruiseAppsV1alpha1NodeTopologyTerm getRequiredPersistentTopology() {
        return requiredPersistentTopology;
    }

    public void setRequiredPersistentTopology(KruiseAppsV1alpha1NodeTopologyTerm requiredPersistentTopology) {
        this.requiredPersistentTopology = requiredPersistentTopology;
    }

    public KruiseAppsV1alpha1PersistentPodStateSpec targetRef(KruiseAppsV1alpha1TargetReference targetRef) {
        this.targetRef = targetRef;
        return this;
    }

    /**
     * Get targetRef
     *
     * @return targetRef
     **/
    @ApiModelProperty(required = true, value = "")
    public KruiseAppsV1alpha1TargetReference getTargetRef() {
        return targetRef;
    }

    public void setTargetRef(KruiseAppsV1alpha1TargetReference targetRef) {
        this.targetRef = targetRef;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof KruiseAppsV1alpha1PersistentPodStateSpec)) {
            return false;
        }
        KruiseAppsV1alpha1PersistentPodStateSpec ioKruiseAppsV1alpha1PersistentPodStateSpec = (KruiseAppsV1alpha1PersistentPodStateSpec) o;
        return Objects.equals(this.persistentPodAnnotations, ioKruiseAppsV1alpha1PersistentPodStateSpec.persistentPodAnnotations) &&
                Objects.equals(this.persistentPodStateRetentionPolicy, ioKruiseAppsV1alpha1PersistentPodStateSpec.persistentPodStateRetentionPolicy) &&
                Objects.equals(this.preferredPersistentTopology, ioKruiseAppsV1alpha1PersistentPodStateSpec.preferredPersistentTopology) &&
                Objects.equals(this.requiredPersistentTopology, ioKruiseAppsV1alpha1PersistentPodStateSpec.requiredPersistentTopology) &&
                Objects.equals(this.targetRef, ioKruiseAppsV1alpha1PersistentPodStateSpec.targetRef);
    }

    @Override
    public int hashCode() {
        return Objects.hash(persistentPodAnnotations, persistentPodStateRetentionPolicy, preferredPersistentTopology, requiredPersistentTopology, targetRef);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KruiseAppsV1alpha1PersistentPodStateSpec {\n");
        sb.append("    persistentPodAnnotations: ").append(toIndentedString(persistentPodAnnotations)).append("\n");
        sb.append("    persistentPodStateRetentionPolicy: ").append(toIndentedString(persistentPodStateRetentionPolicy)).append("\n");
        sb.append("    preferredPersistentTopology: ").append(toIndentedString(preferredPersistentTopology)).append("\n");
        sb.append("    requiredPersistentTopology: ").append(toIndentedString(requiredPersistentTopology)).append("\n");
        sb.append("    targetRef: ").append(toIndentedString(targetRef)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
