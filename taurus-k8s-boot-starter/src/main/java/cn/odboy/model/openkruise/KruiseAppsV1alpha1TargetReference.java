/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.21.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package cn.odboy.model.openkruise;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.annotation.Generated;
import java.util.Objects;

/**
 * TargetReference contains enough information to let you identify an workload for PersistentPodState Selector and TargetReference are mutually exclusive, TargetReference is priority to take effect current only support StatefulSet
 */
@ApiModel(description = "TargetReference contains enough information to let you identify an workload for PersistentPodState Selector and TargetReference are mutually exclusive, TargetReference is priority to take effect current only support StatefulSet")
@Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-21T15:55:09.049+08:00")
public class KruiseAppsV1alpha1TargetReference {
    @SerializedName("apiVersion")
    private String apiVersion = null;
    @SerializedName("kind")
    private String kind = null;
    @SerializedName("name")
    private String name = null;

    public KruiseAppsV1alpha1TargetReference apiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }

    /**
     * API version of the referent.
     *
     * @return apiVersion
     **/
    @ApiModelProperty(required = true, value = "API version of the referent.")
    public String getApiVersion() {
        return apiVersion;
    }

    public void setApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
    }

    public KruiseAppsV1alpha1TargetReference kind(String kind) {
        this.kind = kind;
        return this;
    }

    /**
     * Kind of the referent.
     *
     * @return kind
     **/
    @ApiModelProperty(required = true, value = "Kind of the referent.")
    public String getKind() {
        return kind;
    }

    public void setKind(String kind) {
        this.kind = kind;
    }

    public KruiseAppsV1alpha1TargetReference name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Name of the referent.
     *
     * @return name
     **/
    @ApiModelProperty(required = true, value = "Name of the referent.")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof KruiseAppsV1alpha1TargetReference)) {
            return false;
        }
        KruiseAppsV1alpha1TargetReference ioKruiseAppsV1alpha1PersistentPodStateSpecTargetRef = (KruiseAppsV1alpha1TargetReference) o;
        return Objects.equals(this.apiVersion, ioKruiseAppsV1alpha1PersistentPodStateSpecTargetRef.apiVersion) &&
                Objects.equals(this.kind, ioKruiseAppsV1alpha1PersistentPodStateSpecTargetRef.kind) &&
                Objects.equals(this.name, ioKruiseAppsV1alpha1PersistentPodStateSpecTargetRef.name);
    }

    @Override
    public int hashCode() {
        return Objects.hash(apiVersion, kind, name);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KruiseAppsV1alpha1PersistentPodStateSpecTargetRef {\n");
        sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
        sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
