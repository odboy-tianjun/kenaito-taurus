/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.21.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package cn.odboy.model.openkruise;

import com.google.gson.annotations.SerializedName;
import io.kubernetes.client.openapi.models.V1LabelSelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.annotation.Generated;
import java.util.Objects;

/**
 * Targets defines the namespaces that users want to distribute to.
 */
@ApiModel(description = "Targets defines the namespaces that users want to distribute to.")
@Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-21T15:55:09.049+08:00")
public class KruiseAppsV1alpha1ResourceDistributionTargets {
    @SerializedName("allNamespaces")
    private Boolean allNamespaces = null;
    @SerializedName("excludedNamespaces")
    private KruiseAppsV1alpha1ResourceDistributionTargetNamespaces excludedNamespaces = null;
    @SerializedName("includedNamespaces")
    private KruiseAppsV1alpha1ResourceDistributionTargetNamespaces includedNamespaces = null;
    @SerializedName("namespaceLabelSelector")
    private V1LabelSelector namespaceLabelSelector = null;

    public KruiseAppsV1alpha1ResourceDistributionTargets allNamespaces(Boolean allNamespaces) {
        this.allNamespaces = allNamespaces;
        return this;
    }

    /**
     * If AllNamespaces is true, Resource will be distributed to the all namespaces (except some forbidden namespaces, such as \&quot;kube-system\&quot; and \&quot;kube-public\&quot;).
     *
     * @return allNamespaces
     **/
    @ApiModelProperty(value = "If AllNamespaces is true, Resource will be distributed to the all namespaces (except some forbidden namespaces, such as \"kube-system\" and \"kube-public\").")
    public Boolean isAllNamespaces() {
        return allNamespaces;
    }

    public void setAllNamespaces(Boolean allNamespaces) {
        this.allNamespaces = allNamespaces;
    }

    public KruiseAppsV1alpha1ResourceDistributionTargets excludedNamespaces(KruiseAppsV1alpha1ResourceDistributionTargetNamespaces excludedNamespaces) {
        this.excludedNamespaces = excludedNamespaces;
        return this;
    }

    /**
     * Get excludedNamespaces
     *
     * @return excludedNamespaces
     **/
    @ApiModelProperty(value = "")
    public KruiseAppsV1alpha1ResourceDistributionTargetNamespaces getExcludedNamespaces() {
        return excludedNamespaces;
    }

    public void setExcludedNamespaces(KruiseAppsV1alpha1ResourceDistributionTargetNamespaces excludedNamespaces) {
        this.excludedNamespaces = excludedNamespaces;
    }

    public KruiseAppsV1alpha1ResourceDistributionTargets includedNamespaces(KruiseAppsV1alpha1ResourceDistributionTargetNamespaces includedNamespaces) {
        this.includedNamespaces = includedNamespaces;
        return this;
    }

    /**
     * Get includedNamespaces
     *
     * @return includedNamespaces
     **/
    @ApiModelProperty(value = "")
    public KruiseAppsV1alpha1ResourceDistributionTargetNamespaces getIncludedNamespaces() {
        return includedNamespaces;
    }

    public void setIncludedNamespaces(KruiseAppsV1alpha1ResourceDistributionTargetNamespaces includedNamespaces) {
        this.includedNamespaces = includedNamespaces;
    }

    public KruiseAppsV1alpha1ResourceDistributionTargets namespaceLabelSelector(V1LabelSelector namespaceLabelSelector) {
        this.namespaceLabelSelector = namespaceLabelSelector;
        return this;
    }

    /**
     * Get namespaceLabelSelector
     *
     * @return namespaceLabelSelector
     **/
    @ApiModelProperty(value = "")
    public V1LabelSelector getNamespaceLabelSelector() {
        return namespaceLabelSelector;
    }

    public void setNamespaceLabelSelector(V1LabelSelector namespaceLabelSelector) {
        this.namespaceLabelSelector = namespaceLabelSelector;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof KruiseAppsV1alpha1ResourceDistributionTargets)) {
            return false;
        }
        KruiseAppsV1alpha1ResourceDistributionTargets ioKruiseAppsV1alpha1ResourceDistributionSpecTargets = (KruiseAppsV1alpha1ResourceDistributionTargets) o;
        return Objects.equals(this.allNamespaces, ioKruiseAppsV1alpha1ResourceDistributionSpecTargets.allNamespaces) &&
                Objects.equals(this.excludedNamespaces, ioKruiseAppsV1alpha1ResourceDistributionSpecTargets.excludedNamespaces) &&
                Objects.equals(this.includedNamespaces, ioKruiseAppsV1alpha1ResourceDistributionSpecTargets.includedNamespaces) &&
                Objects.equals(this.namespaceLabelSelector, ioKruiseAppsV1alpha1ResourceDistributionSpecTargets.namespaceLabelSelector);
    }

    @Override
    public int hashCode() {
        return Objects.hash(allNamespaces, excludedNamespaces, includedNamespaces, namespaceLabelSelector);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KruiseAppsV1alpha1ResourceDistributionSpecTargets {\n");
        sb.append("    allNamespaces: ").append(toIndentedString(allNamespaces)).append("\n");
        sb.append("    excludedNamespaces: ").append(toIndentedString(excludedNamespaces)).append("\n");
        sb.append("    includedNamespaces: ").append(toIndentedString(includedNamespaces)).append("\n");
        sb.append("    namespaceLabelSelector: ").append(toIndentedString(namespaceLabelSelector)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
