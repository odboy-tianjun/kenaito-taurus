/*
 * Kruise
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.21.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
package cn.odboy.model.openkruise;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * WorkloadSpreadStatus defines the observed state of WorkloadSpread.
 */
@ApiModel(description = "WorkloadSpreadStatus defines the observed state of WorkloadSpread.")
@Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-07-21T15:55:09.049+08:00")
public class KruiseAppsV1alpha1WorkloadSpreadStatus {
    @SerializedName("observedGeneration")
    private Long observedGeneration = null;
    @SerializedName("subsetStatuses")
    private List<KruiseAppsV1alpha1WorkloadSpreadSubsetStatus> subsetStatuses = null;

    public KruiseAppsV1alpha1WorkloadSpreadStatus observedGeneration(Long observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }

    /**
     * ObservedGeneration is the most recent generation observed for this WorkloadSpread. It corresponds to the WorkloadSpread&#39;s generation, which is updated on mutation by the API Server.
     *
     * @return observedGeneration
     **/
    @ApiModelProperty(value = "ObservedGeneration is the most recent generation observed for this WorkloadSpread. It corresponds to the WorkloadSpread's generation, which is updated on mutation by the API Server.")
    public Long getObservedGeneration() {
        return observedGeneration;
    }

    public void setObservedGeneration(Long observedGeneration) {
        this.observedGeneration = observedGeneration;
    }

    public KruiseAppsV1alpha1WorkloadSpreadStatus subsetStatuses(List<KruiseAppsV1alpha1WorkloadSpreadSubsetStatus> subsetStatuses) {
        this.subsetStatuses = subsetStatuses;
        return this;
    }

    public KruiseAppsV1alpha1WorkloadSpreadStatus addSubsetStatusesItem(KruiseAppsV1alpha1WorkloadSpreadSubsetStatus subsetStatusesItem) {
        if (this.subsetStatuses == null) {
            this.subsetStatuses = new ArrayList<KruiseAppsV1alpha1WorkloadSpreadSubsetStatus>();
        }
        this.subsetStatuses.add(subsetStatusesItem);
        return this;
    }

    /**
     * Contains the status of each subset. Each element in this array represents one subset
     *
     * @return subsetStatuses
     **/
    @ApiModelProperty(value = "Contains the status of each subset. Each element in this array represents one subset")
    public List<KruiseAppsV1alpha1WorkloadSpreadSubsetStatus> getSubsetStatuses() {
        return subsetStatuses;
    }

    public void setSubsetStatuses(List<KruiseAppsV1alpha1WorkloadSpreadSubsetStatus> subsetStatuses) {
        this.subsetStatuses = subsetStatuses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof KruiseAppsV1alpha1WorkloadSpreadStatus)) {
            return false;
        }
        KruiseAppsV1alpha1WorkloadSpreadStatus ioKruiseAppsV1alpha1WorkloadSpreadStatus = (KruiseAppsV1alpha1WorkloadSpreadStatus) o;
        return Objects.equals(this.observedGeneration, ioKruiseAppsV1alpha1WorkloadSpreadStatus.observedGeneration) &&
                Objects.equals(this.subsetStatuses, ioKruiseAppsV1alpha1WorkloadSpreadStatus.subsetStatuses);
    }

    @Override
    public int hashCode() {
        return Objects.hash(observedGeneration, subsetStatuses);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class KruiseAppsV1alpha1WorkloadSpreadStatus {\n");
        sb.append("    observedGeneration: ").append(toIndentedString(observedGeneration)).append("\n");
        sb.append("    subsetStatuses: ").append(toIndentedString(subsetStatuses)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
